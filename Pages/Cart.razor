@page "/cart"
@using front__wasm.Models
@using System.Collections.Generic
@using front__wasm.Shared

<div class="container mx-auto px-4 py-12">
  <h1 class="text-4xl font-bold mb-8 text-center">Carrinho de Compras</h1>

  <!-- New flex container for side-by-side layout -->
  <div class="flex flex-col md:flex-row gap-6">
    <!-- Cart items section - adjusted width -->
    <div class="w-full md:w-2/3">
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8 md:mb-0">
        <div class="flex items-center justify-between pb-4 border-b border-gray-200 mb-4 font-bold">
          <div class="w-2/5">Serviço</div>
          <div class="w-1/5 text-center">Quantidade</div>
          <div class="w-1/5 text-center">Preço</div>
          <div class="w-1/5 text-center">Total</div>
          <div class="w-1/12"></div>
        </div>

        @if (cartItems == null || !cartItems.Any())
        {
          <p class="text-center py-8">Seu carrinho está vazio.</p>
        }
        else
        {
          @foreach (var item in cartItems)
          {
            <CartItem 
              ImageUrl="@item.ImageUrl" 
              ImageAlt="@item.ImageAlt" 
              Title="@item.Title" 
              Description="@item.Description" 
              UnitPrice="@item.UnitPrice" 
              Quantity="@item.Quantity" 
              OnQuantityChanged="@(qty => UpdateQuantity(item, qty))" 
              OnRemoveClicked="@(() => RemoveItem(item))" />
          }
        }
      </div>
    </div>

    <!-- Order summary section using the new component -->
    <div class="w-full md:w-1/3">
      <OrderSummary 
        Subtotal="@CalculateSubtotal()" 
        ServiceFee="2.00m" 
        OnCheckoutClicked="@HandleCheckout" />
    </div>
  </div>
</div>

@code {
    private List<CartItemModel> cartItems = new List<CartItemModel>();

    protected override void OnInitialized()
    {
        //Dado mockado apenas para teste, quando comecarem a colocar coisa no carrinho isso daqui saira
        cartItems.Add(new CartItemModel 
        { 
            ImageUrl = "https://via.placeholder.com/80?text=Gold", 
            ImageAlt = "Gold Service", 
            Title = "Gold Service", 
            Description = "10.000 Gold", 
            UnitPrice = "R$ 19,90", 
            Quantity = 1 
        });
        cartItems.Add(new CartItemModel 
        { 
            ImageUrl = "https://via.placeholder.com/80?text=Gold", 
            ImageAlt = "Gold Service", 
            Title = "Gold Service", 
            Description = "10.000 Gold", 
            UnitPrice = "R$ 19,90", 
            Quantity = 1 
        });
        cartItems.Add(new CartItemModel 
        { 
            ImageUrl = "https://via.placeholder.com/80?text=Gold", 
            ImageAlt = "Gold Service", 
            Title = "Gold Service", 
            Description = "10.000 Gold", 
            UnitPrice = "R$ 19,90", 
            Quantity = 1 
        });
    }

    private void UpdateQuantity(CartItemModel item, int newQuantity)
    {
        item.Quantity = newQuantity;
    }

    private void RemoveItem(CartItemModel item)
    {
        cartItems.Remove(item);
    }

    private decimal CalculateSubtotal()
    {
        decimal subtotal = 0;
        foreach (var item in cartItems)
        {
            string normalizedPrice = item.UnitPrice
                .Replace("R$", "")
                .Trim();
            
            if (decimal.TryParse(normalizedPrice, 
                                System.Globalization.NumberStyles.Currency, 
                                new System.Globalization.CultureInfo("pt-BR"), 
                                out decimal price))
            {
                subtotal += price * item.Quantity;
            }
        }
        return subtotal;
    }

    private async Task HandleCheckout()
    {
        // Implement checkout functionality here
        Console.WriteLine("Checkout clicked");
    }

    public class CartItemModel
    {
        public string ImageUrl { get; set; } = "";
        public string ImageAlt { get; set; } = "";
        public string Title { get; set; } = "";
        public string Description { get; set; } = "";
        public string UnitPrice { get; set; } = "";
        public int Quantity { get; set; } = 1;
    }
}
