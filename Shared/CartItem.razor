@code {
    [Parameter]
    public string ImageUrl { get; set; } = "";

    [Parameter]
    public string ImageAlt { get; set; } = "";

    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public string Description { get; set; } = "";

    [Parameter]
    public string UnitPrice { get; set; } = "";

    [Parameter]
    public int Quantity { get; set; } = 1;

    [Parameter]
    public EventCallback<int> OnQuantityChanged { get; set; }

    [Parameter]
    public EventCallback OnRemoveClicked { get; set; }

    private bool showDeleteConfirmation = false;

    private async Task DecreaseQuantity()
    {
        if (Quantity > 1)
        {
            await OnQuantityChanged.InvokeAsync(Quantity - 1);
        }
        else
        {
            // Se a quantidade é 1, mostra o diálogo de confirmação
            showDeleteConfirmation = true;
        }
    }

    private async Task IncreaseQuantity()
    {
        await OnQuantityChanged.InvokeAsync(Quantity + 1);
    }

    private async Task ConfirmDelete()
    {
        showDeleteConfirmation = false;
        await OnRemoveClicked.InvokeAsync();
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
    }

    private decimal CalculateTotal()
    {
        string normalizedPrice = UnitPrice
            .Replace("R$", "")
            .Trim();
        
        if (decimal.TryParse(normalizedPrice, 
                            System.Globalization.NumberStyles.Currency, 
                            new System.Globalization.CultureInfo("pt-BR"), 
                            out decimal price))
        {
            return price * Quantity;
        }
        return 0;
    }
}

<div class="flex items-center justify-between py-4 border-b border-gray-200">
  <div class="w-2/5 flex items-center">
    <img
      src="@ImageUrl"
      alt="@ImageAlt"
      class="w-16 h-16 object-cover mr-4" />
    <div>
      <h3 class="font-bold text-lg">@Title</h3>
      <p class="text-gray-600">@Description</p>
    </div>
  </div>
  <div class="w-1/5 text-center">
    <div class="flex items-center justify-center">
      <button @onclick="DecreaseQuantity" class="bg-gray-200 hover:bg-gray-300 px-3 py-1 rounded-l transition cursor-pointer">-</button>
      <span class="bg-gray-100 px-4 py-1">@Quantity</span>
      <button @onclick="IncreaseQuantity" class="bg-gray-200 hover:bg-gray-300 px-3 py-1 rounded-r transition cursor-pointer">+</button>
    </div>
  </div>
  <div class="w-1/5 text-center">@UnitPrice</div>
  <div class="w-1/5 text-center font-bold">R$ @(CalculateTotal().ToString("F2").Replace(".", ","))</div>
  <div class="w-1/12 text-center">
    <button @onclick="@(() => showDeleteConfirmation = true)" class="text-red-500 hover:text-red-700 transition cursor-pointer">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
      </svg>
    </button>
  </div>
  
  <DeleteConfirmationDialog 
    IsVisible="@showDeleteConfirmation"
    Title="Remover item"
    Message="@($"Tem certeza que deseja remover '{Title}' do carrinho?")"
    OnConfirm="@ConfirmDelete"
    OnCancel="@CancelDelete" />
</div>